/*
Para fazer um inimigo patrulhar em um jogo de plataforma 2D, você pode usar o componente 
"Rigidbody2D" e o método "Patrol()". Veja um exemplo de como o código pode ficar:
*/

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class EnemyPatrol : MonoBehaviour
{
    public float speed = 5f;
    public float raycastDistance = 0.1f;

    private Rigidbody2D rb;
    private bool isMovingRight = true;

    void Start()
    {
        rb = GetComponent<Rigidbody2D>();
    }

    void Update()
    {
        Patrol();
    }

    void Patrol()
    {
        if (isMovingRight)
        {
            rb.velocity = new Vector2(speed, rb.velocity.y);
            CheckCollision();
        }
        else
        {
            rb.velocity = new Vector2(-speed, rb.velocity.y);
            CheckCollision();
        }
    }

    void CheckCollision()
    {
        RaycastHit2D hit = Physics2D.Raycast(transform.position, Vector2.right, raycastDistance);
        if (hit.collider != null)
        {
            if (hit.collider.tag == "Wall")
            {
                isMovingRight = !isMovingRight;
            }
        }
    }
}

/*
Este script faz o inimigo se movimentar para a direita ou para a esquerda a uma velocidade constante
(definida pela variável "speed"). Quando o inimigo colide com um objeto com a tag "Wall", ele muda de direção.
Lembre-se de adicionar o componente Rigidbody2D ao seu inimigo e de adicionar tags "Wall" aos objetos que 
você quer que sejam considerados como paredes pelo inimigo.
Além disso, você pode querer adicionar um sprite para o inimigo e um sprite para a parede, 
para que você possa ver o jogo em ação.
*/